{"version":3,"sources":["images/Octocat.png","components/Search/SearchIcon.tsx","redux/modules/repos/reposActions.ts","components/Search/Search.tsx","redux/modules/repos/reposSelectors.ts","components/RepoItem/StarIcon.tsx","components/RepoItem/RepoItem.tsx","components/Paginator/Paginator.tsx","components/Main/Main.tsx","redux/modules/repos/reposReducer.ts","redux/store.ts","App.tsx","index.tsx"],"names":["module","exports","SearchIcon","ReposActionTypes","props","width","height","viewBox","fill","strokeMiterlimit","fontFamily","fontWeight","fontSize","textAnchor","style","mixBlendMode","d","fetchRepos","searchInput","pageNumber","dispatch","getState","repositories","items","fetchReposStart","url","URL","searchParams","append","fetch","href","then","res","json","error","fetchReposSuccess","total_count","catch","fetchReposFailure","setCurrentSearchValue","type","FETCH_REPOS_START","searchString","repos","totalCount","FETCH_REPOS_SUCCESS","payload","FETCH_REPOS_FAILURE","SET_SEARCH_INPUT_VALUE","Search","useState","inputValue","setInputValue","useDispatch","handleEnter","useCallback","event","keyCode","useEffect","window","addEventListener","removeEventListener","className","aria-label","placeholder","onChange","e","target","value","onClick","selectMaxPagesNumber","state","currentSearchString","Math","ceil","selectWereReposLoaded","loading","selectError","selectSearchString","Star","RepoItem","html_url","rel","name","description","stargazers_count","language","Paginator","currentPage","setCurrentPage","useSelector","page","selectReposBySearchString","wereReposLoaded","currentSearchInput","numberOfPages","isPreviousButtonEnabled","isNextButtonEnabled","startPage","goToPage","Buttons","buttons","endPage","i","currentPageNumber","push","classnames","key","length","map","repository","id","color","Main","isSearchString","isLoading","src","octocat","alt","message","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35e69286.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Octocat.ef468e27.png\";","import * as React from \"react\";\n\nfunction SearchIcon(props: any) {\n  return (\n    <svg width={30} height={30} viewBox=\"0 0 172 172\" {...props}>\n      <g\n        fill=\"none\"\n        strokeMiterlimit={10}\n        fontFamily=\"none\"\n        fontWeight=\"none\"\n        fontSize=\"none\"\n        textAnchor=\"none\"\n        style={{\n          mixBlendMode: \"normal\",\n        }}\n      >\n        <path d=\"M0 172V0h172v172z\" />\n        <path\n          d=\"M64.5 14.333c-27.621 0-50.167 22.546-50.167 50.167 0 27.621 22.546 50.167 50.167 50.167 12.527 0 23.973-4.673 32.782-12.318l3.051 3.051v9.267l43 43 14.334-14.334-43-43H105.4l-3.051-3.051c7.645-8.81 12.318-20.255 12.318-32.782 0-27.621-22.546-50.167-50.167-50.167zm0 14.334A35.725 35.725 0 01100.333 64.5 35.725 35.725 0 0164.5 100.333 35.725 35.725 0 0128.667 64.5 35.725 35.725 0 0164.5 28.667z\"\n          fill=\"#fff\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nexport default SearchIcon;\n","import { Action, Repo, RootState } from \"../../../types\";\n\nexport enum ReposActionTypes {\n  FETCH_REPOS_START = \"FETCH_REPOS_START\",\n  FETCH_REPOS_SUCCESS = \"FETCH_REPOS_SUCCESS\",\n  FETCH_REPOS_FAILURE = \"FETCH_REPOS_FAILURE\",\n  SET_SEARCH_INPUT_VALUE = \"SET_SEARCH_INPUT_VALUE\",\n}\n\nexport const fetchRepos = (searchInput: string, pageNumber: number) => (\n  dispatch: any,\n  getState: () => RootState\n) => {\n  const reposStore = getState().repositories.items;\n  if (reposStore[searchInput]?.[pageNumber]) {\n    dispatch(setCurrentSearchValue(searchInput));\n    return;\n  }\n  dispatch(fetchReposStart);\n  const url = new URL(\"https://api.github.com/search/repositories\");\n  url.searchParams.append(\"q\", searchInput);\n  url.searchParams.append(\"sort\", \"stars\");\n  url.searchParams.append(\"order\", \"desc\");\n  url.searchParams.append(\"page\", `${pageNumber}`);\n  url.searchParams.append(\"per_page\", \"30\");\n\n  return fetch(url.href)\n    .then((res) => res.json())\n    .then((res) => {\n      if (res.error) {\n        throw res.error;\n      }\n      dispatch(\n        fetchReposSuccess(searchInput, pageNumber, res.items, res.total_count)\n      );\n    })\n    .catch((error) => {\n      dispatch(fetchReposFailure(error));\n    });\n};\n\nexport const fetchReposStart: Action<ReposActionTypes> = {\n  type: ReposActionTypes.FETCH_REPOS_START,\n};\n\nexport const fetchReposSuccess = (\n  searchString: string,\n  pageNumber: number,\n  repos: Repo[],\n  totalCount: number\n): Action<ReposActionTypes> => ({\n  type: ReposActionTypes.FETCH_REPOS_SUCCESS,\n  payload: { searchString, pageNumber, repos, totalCount },\n});\n\nexport const fetchReposFailure = (\n  error: Error\n): Action<ReposActionTypes, Error> => {\n  return {\n    type: ReposActionTypes.FETCH_REPOS_FAILURE,\n    payload: error,\n  };\n};\n\nexport const setCurrentSearchValue = (\n  searchString: string\n): Action<ReposActionTypes> => ({\n  type: ReposActionTypes.SET_SEARCH_INPUT_VALUE,\n  payload: { searchString },\n});\n","import React, { ChangeEvent, useState, useEffect, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport SearchIcon from \"./SearchIcon\";\n\nimport \"./Search.scss\";\nimport { fetchRepos } from \"redux/modules/repos/reposActions\";\n\ninterface SearchProps {}\n\nconst Search: React.FunctionComponent<SearchProps> = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(fetchRepos(inputValue, 1));\n  };\n\n  const handleEnter = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.keyCode === 13) {\n        dispatch(fetchRepos(inputValue, 1));\n      }\n    },\n    [dispatch, inputValue]\n  );\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleEnter);\n    return () => window.removeEventListener(\"keyup\", handleEnter);\n  }, [handleEnter]);\n\n  return (\n    <div className=\"c-search\">\n      <input\n        aria-label=\"search-input\"\n        className=\"c-search__input\"\n        type=\"search\"\n        placeholder=\"Search\"\n        onChange={handleChange}\n      ></input>\n      <button className=\"c-search__button\">\n        <SearchIcon onClick={handleClick} />\n      </button>\n    </div>\n  );\n};\n\nexport default Search;\n","import { RootState } from \"types\";\n\nexport const selectReposBySearchString = (state: RootState, page: number = 1) =>\n  state.repositories.items[state.repositories.currentSearchString]?.[page];\n\nexport const selectMaxPagesNumber = (state: RootState) => {\n  const totalCount =\n    state.repositories.items[state.repositories.currentSearchString]\n      ?.totalCount;\n\n  return totalCount >= 1000 ? 34 : Math.ceil(totalCount / 30);\n};\n\nexport const selectWereReposLoaded = (state: RootState) =>\n  !state.repositories.loading;\n\nexport const selectError = (state: RootState) => state.repositories.error;\n\nexport const selectSearchString = (state: RootState) =>\n  state.repositories.currentSearchString;\n","import React from \"react\";\n\nfunction Star(props: any) {\n  return (\n    <svg height=\"16px\" viewBox=\"0 -10 511.987 511\" width=\"16px\" {...props}>\n      <path\n        d=\"M510.652 185.902a27.158 27.158 0 00-23.425-18.71l-147.774-13.419-58.433-136.77C276.71 6.98 266.898.494 255.996.494s-20.715 6.487-25.023 16.534l-58.434 136.746-147.797 13.418A27.208 27.208 0 001.34 185.902c-3.371 10.368-.258 21.739 7.957 28.907l111.7 97.96-32.938 145.09c-2.41 10.668 1.73 21.696 10.582 28.094 4.757 3.438 10.324 5.188 15.937 5.188 4.84 0 9.64-1.305 13.95-3.883l127.468-76.184 127.422 76.184c9.324 5.61 21.078 5.097 29.91-1.305a27.223 27.223 0 0010.582-28.094l-32.937-145.09 111.699-97.94a27.224 27.224 0 007.98-28.927zm0 0\"\n        fill=\"#ffc107\"\n      />\n    </svg>\n  );\n}\n\nexport default Star;\n","import React from \"react\";\nimport { Repo } from \"types\";\nimport Star from \"./StarIcon\";\n\nimport \"./RepoItem.scss\";\n\ninterface RepoProps extends Repo {}\n\nconst RepoItem: React.FunctionComponent<RepoProps> = (props) => {\n  return (\n    <div className=\"c-repo-item\">\n      <a\n        className=\"c-repo-item__name\"\n        href={props.html_url}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {props.name}\n      </a>\n      <div className=\"c-repo-item__description\">{props.description}</div>\n      <div className=\"c-repo-item__footer\">\n        <span className=\"c-repo-item__stars\">\n          <Star />\n          {props.stargazers_count}\n        </span>\n        <span className=\"c-repo-item__language\">{props.language}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default RepoItem;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport classnames from \"classnames\";\n\nimport {\n  selectReposBySearchString,\n  selectMaxPagesNumber,\n  selectWereReposLoaded,\n  selectSearchString,\n} from \"redux/modules/repos/reposSelectors\";\nimport { fetchRepos } from \"redux/modules/repos/reposActions\";\n\nimport RepoItem from \"components/RepoItem\";\n\nimport { RootState } from \"types\";\n\nimport \"./Paginator.scss\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\ninterface PaginatorProps {}\n\nconst Paginator: React.FunctionComponent<PaginatorProps> = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const dispatch = useDispatch();\n\n  const repositories = useSelector((state: RootState) =>\n    selectReposBySearchString(state, currentPage)\n  );\n  const wereReposLoaded = useSelector(selectWereReposLoaded);\n  const currentSearchInput = useSelector(selectSearchString);\n  const numberOfPages = useSelector(selectMaxPagesNumber);\n\n  const isPreviousButtonEnabled = currentPage > 1;\n  const isNextButtonEnabled = currentPage < numberOfPages;\n\n  const startPage =\n    numberOfPages > 4\n      ? numberOfPages - currentPage > 2\n        ? currentPage - 3 < 0\n          ? 1\n          : currentPage - 2\n        : numberOfPages - 4\n      : 1;\n\n  const goToPage = (pageNumber: number) => () => {\n    setCurrentPage(pageNumber);\n    dispatch(fetchRepos(currentSearchInput, pageNumber));\n  };\n\n  const Buttons = () => {\n    let buttons = [];\n    const endPage = numberOfPages > 4 ? 5 : numberOfPages;\n    for (let i: number = 0; i < endPage; i++) {\n      const currentPageNumber = startPage + i;\n      buttons.push(\n        <button\n          className={classnames(\"c-paginator__pagination-button\", {\n            \"c-paginator__pagination-button--active\":\n              currentPageNumber === currentPage,\n          })}\n          key={currentPageNumber}\n          onClick={goToPage(currentPageNumber)}\n        >\n          {currentPageNumber}\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"c-paginator__pagination-buttons\">\n        {isPreviousButtonEnabled && (\n          <button\n            className=\"c-paginator__pagination-arrow-button\"\n            onClick={goToPage(currentPage - 1)}\n          >\n            {\"<<\"}\n          </button>\n        )}\n        {buttons}\n        {isNextButtonEnabled && (\n          <button\n            className=\"c-paginator__pagination-arrow-button\"\n            onClick={goToPage(currentPage + 1)}\n          >\n            >>\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  return wereReposLoaded ? (\n    <div className=\"c-paginator\">\n      {repositories?.length ? (\n        <>\n          <div className=\"repo-items-list\">\n            {repositories.map((repository) => (\n              <RepoItem key={repository.id} {...repository}></RepoItem>\n            ))}\n          </div>\n          <Buttons></Buttons>\n        </>\n      ) : (\n        <div className=\"c-paginator__empty-result\">There are no results</div>\n      )}\n    </div>\n  ) : (\n    <div className=\"c-paginator__loading\">\n      <Loader type=\"ThreeDots\" color=\"#0366d6\" height={50} width={50} />\n    </div>\n  );\n};\n\nexport default Paginator;\n","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Search from \"../Search\";\nimport Paginator from \"components/Paginator\";\n\nimport octocat from \"../../images/Octocat.png\";\nimport {\n  selectSearchString,\n  selectWereReposLoaded,\n  selectError,\n} from \"redux/modules/repos/reposSelectors\";\n\nimport \"./Main.scss\";\n\ninterface MainProps {}\n\nconst Main: React.FunctionComponent<MainProps> = () => {\n  const isSearchString = useSelector(selectSearchString);\n  const isLoading = !useSelector(selectWereReposLoaded);\n  const error = useSelector(selectError);\n\n  return (\n    <div className=\"c-app\">\n      <div className=\"c-app__head\">\n        <img src={octocat} alt=\"github logo\" className=\"c-app__logo\" />\n        <Search></Search>\n      </div>\n      {error ? (\n        <div className=\"c-app__error\">{`Error: ${error.message}`}</div>\n      ) : isLoading || isSearchString ? (\n        <Paginator></Paginator>\n      ) : (\n        <div className=\"c-app__empty-search\">\n          Enter the name of the repository you want to find\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","import { ReposActionTypes } from \"./reposActions\";\nimport { Action, ReposState } from \"../../../types\";\n\nexport const initialState: ReposState = {\n  items: {},\n  loading: false,\n  error: null,\n  currentSearchString: \"\",\n};\n\nexport default function reposReducer(\n  state: ReposState = initialState,\n  action: Action<ReposActionTypes, any>\n) {\n  switch (action.type) {\n    case ReposActionTypes.FETCH_REPOS_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case ReposActionTypes.FETCH_REPOS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        currentSearchString: action.payload.searchString,\n        items: {\n          ...state.items,\n          [action.payload.searchString]: {\n            ...state.items[action.payload.searchString],\n            totalCount: action.payload.totalCount,\n            [action.payload.pageNumber]: action.payload.repos,\n          },\n        },\n      };\n\n    case ReposActionTypes.FETCH_REPOS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n\n    case ReposActionTypes.SET_SEARCH_INPUT_VALUE:\n      return { ...state, currentSearchString: action.payload.searchString };\n\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reposReducer from \"../redux/modules/repos/reposReducer\";\n\nexport const rootReducer = combineReducers({\n  repositories: reposReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport Main from \"components/Main\";\nimport store from \"./redux/store\";\n\nimport \"./reset.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Main></Main>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}